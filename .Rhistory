head(df1["pop"])
head(df1$pop)
# 6.
head(df1[["pays"]])
head(df1["pays"])
# 7.
unique(df1["pays"])
# 3.
class(df1)
# 7.
unique(df1["continent"])
# 8.
saveRDS(df1, "jeanZeKing")
# 8.
saveRDS(df1, "jeanZeKing.rds")
# 8.
saveRDS(df1, "data/save.rds")
# 1.
df1["year" == 2007]
# 1.
df1[df1["year"] == 2007]
# 1.
head(df1[df1["year"] == 2007])
# 1.
head(df1[,df1["year"] == 2007])
# 1.
head(df1[df1["year"] == 2007,])
# 1.
df07 <- df1[df1["year"] == 2007,]
View(df07)
# 2.
df07 <- df1[-"year"]
# 2.
df07 <- df1[-3]
# 2.
df07 <- df07[-3]
# 1.
df07 <- df1[df1["year"] == 2007,]
# 2.
#df07 <- df07[-3]
df07["year"] <- NULL
# 3.
df07$gdp_tot <- df07$pop*df07$gdpPercap
# 4.
df07[,df07$gdp_tot == min(gdp_tot)]
# 4.
df07[,df07$gdp_tot == min(df07$gdp_tot)]
# 4.
df07[df07$gdp_tot == min(df07$gdp_tot),]
# 4.
df07[df07$gdp_tot == min(df07$gdp_tot), c("pays", "gdp_tot")]
df07[df07$gdp_tot == max(df07$gdp_tot), c("pays", "gdp_tot")] #Trouver pays maxi GDP
# 5.
summary(df07$gdp_tot)
std(gdp_tot)
sd(gdp_tot)
# 5.
sum(df07$gdp_tot)
mean(df07$gdp_tot)
sd(df07$gdp_tot)
summary(df07$gdp_tot)
# 1.
tapply(df1,df1$gdpPercap,mean)
# 1.
tapply(df1$gdpPercap,df1$year,mean)
# 2.
aggregate(df1$gdpPercap,df1$year,mean)
# 2.
aggregate(df1$gdpPercap,list(df1$year),mean)
# 4.
df07[df07$gdp_tot == min(df07$gdp_tot), c("pays", "gdp_tot")] #Trouver pays mini GDP
subset[df1,select = -year]
subset[df1,select = -"year"]
subset(df1,select = -"year")
subset(df1,select = -year)
# 3.
head(df07$gdp_tot <- df07$pop*df07$gdpPercap)
# 6.
summary(df07$gdp_tot)
# 4.
df07[which.min(df07$gdp_tot), c("pays", "gdp_tot")] #Trouver pays mini GDP
install.packages("tidyverse")
# Tidyverse
library(tidyverse)
# Tidyverse
install.packages("tidyverse")
# Tidyverse
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
# 1.
tapply(df1$gdpPercap,df1$year,mean)
install.packages("tidyverse")
# install.packages("tidyverse")
library(tidyverse)
# install.packages("tidyverse")
library(dplyr)
df08 <- filter(df01, "year" == 2007)
df08 <- filter(df1, "year" == 2007)
View(df08)
df08 <- filter(df1, year == 2007)
# 2.
df09 <- select(df08,year)
View(df09)
# 2.
df09 <- select(df08,-year)
# 2.
df09 <- select(df08,-year)
# 2.
df08 <- select(df08,-year)
# 3.
df08 <- mutate(df08,gdp_tot = gdpPercap * pop)
# 2.
df09 <- filter(df1, year == 2007) %>% select(df08,-year) %>% mutate(df08,gdp_tot = gdpPercap * pop)
# 2.
df09 <- filter(df1, year == 2007) %>% select(-year) %>% mutate(gdp_tot = gdpPercap * pop)
# 3.
summarise(df09$gdp_tot)
# 2. pipe : ctrl + maj + m
df09 <- df1 %>% filter(year == 2007) %>% select(-year) %>% mutate(gdp_tot = gdpPercap * pop)
summarise(df09)
summarise(df09$gdp_tot)
summarise(sum = df09$gdp_tot)
summarise(df09$gdp_tot,sum = sum)
summarise(df09$gdp_tot,sum = sum())
df09$gdp_tot %>% summarise(sum = sum())
# 3.
df09$gdp_tot %>% summarise()
# 3.
df09 %>% summarise(avg = mean(df09$gdp_tot))
# 3.
df09 %>% summarise(sum = sum(df09$gdp_tot))
df09 %>% summarise(mean = mean(df09$gdp_tot))
df09 %>% summarise(mean = mean(df09$gdp_tot))
df09 %>% summarise(mean = mean(df09$gdp_tot))
# 4.
df09 %>% groupby(year)
# 4.
df09 %>% group_by(year)
# 4.
df01 %>% group_by(year)
# 4.
df1 %>% group_by(year)
# 4.
df1 %>% group_by(year, add=TRUE)
View(df1)
# 3.
df09 %>% summarise(somme = sum(gdp_tot),
moyenne = mean(gdp_tot),
ecart_type = sd(gdp_tot)
)
# 4.
df1 %>% group_by(continent, add=TRUE)
# 4.
df1 %>% group_by(continent)
# 4.
df1 %>% group_by(year)
# 4.
df1 %>% group_by(year) %>% summarise(moyenne_GDP = mean(gdpPercap))
# 5.
df1 %>% group_by(continent) %>% summarise(moyenne_GDP = mean(gdpPercap))
# 5.
df1 %>% group_by(continent,year) %>% summarise(moyenne_GDP = mean(gdpPercap))
# 5.
df1 %>% group_by(continent,year) %>% summarise(moyenne_GDP = mean(gdpPercap))->results_gdp
View(results_gdp)
library(tidyr)
results_gdp %>% pivot_longer(c(unique(year)))
results_gdp %>% pivot_longer(c("1952","1977")
results_gdp %>% pivot_longer(c("1952","1977"))
library(tidyr)
results_gdp %>% pivot_longer(c("1952","1977"))
results_gdp %>% pivot_longer(c(1952,1977))
results_gdp %>% pivot_longer(c('1952','1977'))
rlang::last_error()
results_gdp %>% pivot_longer(c("1952","1977"))
results_gdp %>% pivot_wider(c("1952","1977"))
results_gdp %>% pivot_wider(names_from = year)
results_gdp %>% pivot_wider(names_from = year, values_from = moyenne_GDP)
# 1.
results_gdp %>% pivot_wider(names_from = year, values_from = moyenne_GDP) %>% new_df
# 1.
results_gdp %>% pivot_wider(names_from = year, values_from = moyenne_GDP) %>% my_df
# 1.
results_gdp %>% pivot_wider(names_from = year, values_from = moyenne_GDP) -> my_df
View(my_df)
# 2.
my_df %>% pivot_longer(names_to = year, values_to = moyenne_GDP)
# 2.
my_df %>% pivot_longer(names_to = year)
# 2.
my_df %>% pivot_longer(-continent)
# 2.
my_df %>% pivot_longer(-continent, year,gdpPercap)
# 2.
my_df %>% pivot_longer(-continent, year)
# 2.
my_df %>% pivot_longer(-continent, names_to = year)
# 2.
my_df %>% pivot_longer(-continent, names_to = "year")
# 2.
my_df %>% pivot_longer(-continent, names_to = "year", values_to = "gdpPercap")
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyr)
library(tidyr)
# Manipulation de données ####
# 1.
test <- read.table("data/gapminder.csv", sep = ";", header = TRUE)
# 2.
df1 <- read.table("data/gapminder.txt", header = TRUE, stringsAsFactors = FALSE)
identical(test,df1) # Teste si deux objets sont identiques
# 3.
class(df1)
# 4.
colnames(df1) # Afficher le nom des colonnes
colnames(df1)[1] <- c("pays")
colnames(df1)
# 5.
head(df1[5])
head(df1["pop"])
head(df1$pop)
# 6.
head(df1[["pays"]])
head(df1["pays"])
# 7.
unique(df1["continent"])
# 8.
saveRDS(df1, "data/save.rds")
# Manipulation: filtrer, selectionner et créer une variable ####
# 1.
df07 <- df1[df1["year"] == 2007,]
# 2.
#df07 <- df07[-3] # Supprimer une colonne par son numéro de ligne
df07["year"] <- NULL # Supprimer une colonne par son nom
subset(df1,select = -year)
# 3.
head(df07$gdp_tot <- df07$pop*df07$gdpPercap)
# 4.
df07[which.min(df07$gdp_tot), c("pays", "gdp_tot")] #Trouver pays mini GDP
df07[df07$gdp_tot == max(df07$gdp_tot), c("pays", "gdp_tot")] #Trouver pays maxi GDP
# 5.
sum(df07$gdp_tot)
mean(df07$gdp_tot)
sd(df07$gdp_tot)
# 6.
summary(df07$gdp_tot)
# Opérations sur les données ####
# 1.
tapply(df1$gdpPercap,df1$year,mean)
# 2.
aggregate(df1$gdpPercap,list(df1$year),mean)
# Tidyverse ####
# install.packages("tidyverse") filter, select, mutate
library(dplyr)
# 1.
df08 <- filter(df1, year == 2007)
df08 <- select(df08,-year)
df08 <- mutate(df08,gdp_tot = gdpPercap * pop)
# 2. pipe : ctrl + maj + m
df09 <- df1 %>%
filter(year == 2007) %>%
select(-year) %>%
mutate(gdp_tot = gdpPercap * pop)
# 3.
df09 %>% summarise(somme = sum(gdp_tot),
moyenne = mean(gdp_tot),
ecart_type = sd(gdp_tot)
)
# 4.
df1 %>% group_by(year) %>% summarise(moyenne_GDP = mean(gdpPercap))
# 5.
df1 %>% group_by(continent,year) %>% summarise(moyenne_GDP = mean(gdpPercap))->results_gdp
# Tidyr ####
library(tidyr)
# 1.
results_gdp %>% pivot_wider(names_from = year, values_from = moyenne_GDP) -> my_df
# 2.
my_df %>% pivot_longer(-continent, names_to = "year", values_to = "gdpPercap")
# Manipulation de données ####
install.packages("tidyverse")
# Manipulation de données ####
install.packages("tidyverse")
# Manipulation de données ####
install.packages("tidyverse")
# Manipulation de données ####
install.packages("tidyverse")
library(ggplot2)
ggplot(mpg, aes(displ, hwy, colour = class)) +
geom_point()
ggplot(df1)
ggplot(df1)
View(df1)
ggplot(df1,aes(x = lifeExp, y = gdpPerCap))
ggplot(df1,aes(lifeExp, gdpPerCap))
ggplot(df1,aes(df1$lifeExp, df1$gdpPerCap))
ggplot(data = mpg) +
geom_point(df1,aes(x = df1$lifeExp, y = df1$gdpPerCap))
ggplot(data = mpg) +
geom_point(mapping,aes(x = df1$lifeExp, y = df1$gdpPerCap))
ggplot(data = mpg) +
geom_point(mapping = aes(x = df1$lifeExp, y = df1$gdpPerCap))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displp, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = df1) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = df1) +
geom_point(mapping = aes(x = df1$lifeExp, y = df1$gdpPercap))
ggplot(data = df1) +
geom_point(mapping = aes(x = df1$lifeExp, y = df1$gdpPercap, color = df1$continent))
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1
library(tidyr)
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
View(df1)
# 2.
df1 <- read.table("data/gapminder.txt", header = TRUE, stringsAsFactors = FALSE)
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1 %>% filter(year == '2007') %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
library(ggplot2)
library(ggplot2)
library(ggplot2)
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1 %>% filter(year == 1952) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1 %>% filter(continent == "Asia") %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
# Manipulation de données ####
install.packages("tidyverse")
# 1.
test <- read.table("data/gapminder.csv", sep = ";", header = TRUE)
# 2.
df1 <- read.table("data/gapminder.txt", header = TRUE, stringsAsFactors = FALSE)
identical(test,df1) # Teste si deux objets sont identiques
# 3.
class(df1)
# 4.
colnames(df1) # Afficher le nom des colonnes
colnames(df1)[1] <- c("pays")
colnames(df1)
# 5.
head(df1[5])
head(df1["pop"])
head(df1$pop)
# 6.
head(df1[["pays"]])
head(df1["pays"])
# 7.
unique(df1["continent"])
# 8.
saveRDS(df1, "data/save.rds")
# Manipulation: filtrer, selectionner et créer une variable ####
# 1.
df07 <- df1[df1["year"] == 2007,]
# 2.
#df07 <- df07[-3] # Supprimer une colonne par son numéro de ligne
df07["year"] <- NULL # Supprimer une colonne par son nom
subset(df1,select = -year)
# 3.
head(df07$gdp_tot <- df07$pop*df07$gdpPercap)
# 4.
df07[which.min(df07$gdp_tot), c("pays", "gdp_tot")] #Trouver pays mini GDP
df07[df07$gdp_tot == max(df07$gdp_tot), c("pays", "gdp_tot")] #Trouver pays maxi GDP
# 5.
sum(df07$gdp_tot)
mean(df07$gdp_tot)
sd(df07$gdp_tot)
# 6.
summary(df07$gdp_tot)
# Opérations sur les données ####
# 1.
tapply(df1$gdpPercap,df1$year,mean)
# 2.
aggregate(df1$gdpPercap,list(df1$year),mean)
# Tidyverse ####
# install.packages("tidyverse") filter, select, mutate
library(dplyr)
# 1.
df08 <- filter(df1, year == 2007)
df08 <- select(df08,-year)
df08 <- mutate(df08,gdp_tot = gdpPercap * pop)
# 2. pipe : ctrl + maj + m
df1 %>%
filter(year == 2007) %>%
select(-year) %>%
mutate(gdp_tot = gdpPercap * pop) -> df09
# 3.
df09 %>% summarise(somme = sum(gdp_tot),
moyenne = mean(gdp_tot),
ecart_type = sd(gdp_tot)
)
# 4.
df1 %>% group_by(year) %>% summarise(moyenne_GDP = mean(gdpPercap))
# 5.
df1 %>% group_by(continent,year) %>% summarise(moyenne_GDP = mean(gdpPercap))->results_gdp
# Tidyr ####
library(tidyr)
# 1.
results_gdp %>% pivot_wider(names_from = year, values_from = moyenne_GDP) -> my_df
# 2.
my_df %>% pivot_longer(-continent, names_to = "year", values_to = "gdpPercap")
# ggplot2 ####
library(ggplot2)
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap))
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap)) +
geom_point()
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap)) +
geom_point() +
geom_line()
# 1.
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap, color = "continent")) +
geom_point()
# 1.
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap, color = continent)) +
geom_point()
# 1.
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = lifeExp, y = gdpPercap, color = continent)) +
geom_point() +
labs(x = "Espérance de vie (années") +
labs(y = "PIB/hab") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1 %>% filter(year == 2007) %>%
ggplot(aes(x = year, y = gdpPercap, color = continent)) +
geom_line() +
labs(x = "Espérance de vie (années") +
labs(y = "PIB/hab") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>%
ggplot(aes(x = year, y = gdpPercap, color = continent)) +
geom_line() +
labs(x = "Espérance de vie (années") +
labs(y = "PIB/hab") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>% group_by(continent) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_line() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>% group_by(continent) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_point() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_point() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
ggplot(aes(x = year, y = moyenne_esp_vie, color = continent)) +
geom_point() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_point() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_point() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>% group_by(continent,year) %>% summarise(moyenne_esp_vie = mean(lifeExp)) %>%
ggplot(aes(x = year, y = lifeExp, color = continent)) +
geom_point() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>% group_by(continent,year) %>% summarise(moyenne_esp_vie = mean(lifeExp)) %>%
ggplot(aes(x = year, y = moyenne_esp_vie, color = continent)) +
geom_point() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
df1  %>% group_by(continent,year) %>% summarise(moyenne_esp_vie = mean(lifeExp)) %>%
ggplot(aes(x = year, y = moyenne_esp_vie, color = continent)) +
geom_line() +
labs(x = "Années") +
labs(y = "Espérance de vie (années)") +
labs(title = "Espérance de vie et PIB/hab en 2007")
